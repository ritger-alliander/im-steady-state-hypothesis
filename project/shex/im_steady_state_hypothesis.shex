BASE <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU#Package_SteadyStateHypothesisProfile/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX cim: <http://iec.ch/TC57/CIM100#>
PREFIX this: <http://iec.ch/TC57/ns/CIM/SteadyStateHypothesis-EU#Package_SteadyStateHypothesisProfile>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

this:ACDCTerminal  (
    CLOSED {
       (  $this:ACDCTerminal_tes (  &this:IdentifiedObject_tes ;
             rdf:type [ cim:IdentifiedObject ] ? ;
             cim:ACDCTerminal.connected @linkml:Boolean
          ) ;
          rdf:type [ cim:ACDCTerminal ] ?
       )
    } OR @this:Terminal
)

this:ActivePower CLOSED {
    (  $this:ActivePower_tes (  cim:ActivePower.value @linkml:Float ? ;
          cim:ActivePower.multiplier [ cim:UnitMultiplier.y cim:UnitMultiplier.z cim:UnitMultiplier.a cim:UnitMultiplier.f
             cim:UnitMultiplier.p cim:UnitMultiplier.n cim:UnitMultiplier.micro cim:UnitMultiplier.m cim:UnitMultiplier.c
             cim:UnitMultiplier.d cim:UnitMultiplier.none cim:UnitMultiplier.da cim:UnitMultiplier.h cim:UnitMultiplier.k
             cim:UnitMultiplier.M cim:UnitMultiplier.G cim:UnitMultiplier.T cim:UnitMultiplier.P cim:UnitMultiplier.E
             cim:UnitMultiplier.Z cim:UnitMultiplier.Y ] ? ;
          cim:ActivePower.unit [ cim:UnitSymbol.none cim:UnitSymbol.m cim:UnitSymbol.kg cim:UnitSymbol.s cim:UnitSymbol.A
             cim:UnitSymbol.K cim:UnitSymbol.mol cim:UnitSymbol.cd cim:UnitSymbol.deg cim:UnitSymbol.rad cim:UnitSymbol.sr
             cim:UnitSymbol.Gy cim:UnitSymbol.Bq cim:UnitSymbol.degC cim:UnitSymbol.Sv cim:UnitSymbol.F cim:UnitSymbol.C
             cim:UnitSymbol.S cim:UnitSymbol.H cim:UnitSymbol.V cim:UnitSymbol.ohm cim:UnitSymbol.J cim:UnitSymbol.N
             cim:UnitSymbol.Hz cim:UnitSymbol.lx cim:UnitSymbol.lm cim:UnitSymbol.Wb cim:UnitSymbol.T cim:UnitSymbol.W
             cim:UnitSymbol.Pa cim:UnitSymbol.m2 cim:UnitSymbol.m3 cim:UnitSymbol.mPers cim:UnitSymbol.mPers2 cim:UnitSymbol.m3Pers
             cim:UnitSymbol.mPerm3 cim:UnitSymbol.kgm cim:UnitSymbol.kgPerm3 cim:UnitSymbol.m2Pers cim:UnitSymbol.WPermK
             cim:UnitSymbol.JPerK cim:UnitSymbol.ppm cim:UnitSymbol.rotPers cim:UnitSymbol.radPers cim:UnitSymbol.WPerm2
             cim:UnitSymbol.JPerm2 cim:UnitSymbol.SPerm cim:UnitSymbol.KPers cim:UnitSymbol.PaPers cim:UnitSymbol.JPerkgK
             cim:UnitSymbol.VA cim:UnitSymbol.VAr cim:UnitSymbol.cosPhi cim:UnitSymbol.Vs cim:UnitSymbol.V2 cim:UnitSymbol.As
             cim:UnitSymbol.A2 cim:UnitSymbol.A2s cim:UnitSymbol.VAh cim:UnitSymbol.Wh cim:UnitSymbol.VArh cim:UnitSymbol.VPerHz
             cim:UnitSymbol.HzPers cim:UnitSymbol.character cim:UnitSymbol.charPers cim:UnitSymbol.kgm2 cim:UnitSymbol.dB
             cim:UnitSymbol.WPers cim:UnitSymbol.lPers cim:UnitSymbol.dBm cim:UnitSymbol.h cim:UnitSymbol.min cim:UnitSymbol.Q
             cim:UnitSymbol.Qh cim:UnitSymbol.ohmm cim:UnitSymbol.APerm cim:UnitSymbol.V2h cim:UnitSymbol.A2h cim:UnitSymbol.Ah
             cim:UnitSymbol.count cim:UnitSymbol.ft3 cim:UnitSymbol.m3Perh cim:UnitSymbol.gal cim:UnitSymbol.Btu cim:UnitSymbol.l
             cim:UnitSymbol.lPerh cim:UnitSymbol.lPerl cim:UnitSymbol.gPerg cim:UnitSymbol.molPerm3 cim:UnitSymbol.molPermol
             cim:UnitSymbol.molPerkg cim:UnitSymbol.sPers cim:UnitSymbol.HzPerHz cim:UnitSymbol.VPerV cim:UnitSymbol.APerA
             cim:UnitSymbol.VPerVA cim:UnitSymbol.rev cim:UnitSymbol.kat cim:UnitSymbol.JPerkg cim:UnitSymbol.m3Uncompensated
             cim:UnitSymbol.m3Compensated cim:UnitSymbol.WPerW cim:UnitSymbol.therm cim:UnitSymbol.onePerm cim:UnitSymbol.m3Perkg
             cim:UnitSymbol.Pas cim:UnitSymbol.Nm cim:UnitSymbol.NPerm cim:UnitSymbol.radPers2 cim:UnitSymbol.JPerm3
             cim:UnitSymbol.VPerm cim:UnitSymbol.CPerm3 cim:UnitSymbol.CPerm2 cim:UnitSymbol.FPerm cim:UnitSymbol.HPerm
             cim:UnitSymbol.JPermol cim:UnitSymbol.JPermolK cim:UnitSymbol.CPerkg cim:UnitSymbol.GyPers cim:UnitSymbol.WPersr
             cim:UnitSymbol.WPerm2sr cim:UnitSymbol.katPerm3 cim:UnitSymbol.d cim:UnitSymbol.anglemin cim:UnitSymbol.anglesec
             cim:UnitSymbol.ha cim:UnitSymbol.tonne cim:UnitSymbol.bar cim:UnitSymbol.mmHg cim:UnitSymbol.M cim:UnitSymbol.kn
             cim:UnitSymbol.Mx cim:UnitSymbol.G cim:UnitSymbol.Oe cim:UnitSymbol.Vh cim:UnitSymbol.WPerA cim:UnitSymbol.onePerHz
             cim:UnitSymbol.VPerVAr cim:UnitSymbol.ohmPerm cim:UnitSymbol.kgPerJ cim:UnitSymbol.JPers ] ?
       ) ;
       rdf:type [ cim:ActivePower ] ?
    )
}

this:Breaker CLOSED {
    (  $this:Breaker_tes (  &this:ProtectedSwitch_tes ;
          rdf:type [ cim:ProtectedSwitch ] ?
       ) ;
       rdf:type [ cim:Breaker ] ?
    )
}

this:ConductingEquipment  (
    CLOSED {
       (  $this:ConductingEquipment_tes (  &this:Equipment_tes ;
             rdf:type [ cim:Equipment ] ?
          ) ;
          rdf:type [ cim:ConductingEquipment ] ?
       )
    } OR @this:EnergyConnection OR @this:Switch
)

this:Disconnector CLOSED {
    (  $this:Disconnector_tes (  &this:Switch_tes ;
          rdf:type [ cim:Switch ] ?
       ) ;
       rdf:type [ cim:Disconnector ] ?
    )
}

this:EnergyConnection  (
    CLOSED {
       (  $this:EnergyConnection_tes (  &this:ConductingEquipment_tes ;
             rdf:type [ cim:ConductingEquipment ] ?
          ) ;
          rdf:type [ cim:EnergyConnection ] ?
       )
    } OR @this:EnergyConsumer
)

this:EnergyConsumer CLOSED {
    (  $this:EnergyConsumer_tes (  &this:EnergyConnection_tes ;
          rdf:type [ cim:EnergyConnection ] ? ;
          cim:EnergyConsumer.p @this:ActivePower ;
          cim:EnergyConsumer.q @this:ReactivePower
       ) ;
       rdf:type [ cim:EnergyConsumer ] ?
    )
}

this:Equipment  (
    CLOSED {
       (  $this:Equipment_tes (  &this:PowerSystemResource_tes ;
             rdf:type [ cim:PowerSystemResource ] ? ;
             cim:Equipment.inService @linkml:Boolean
          ) ;
          rdf:type [ cim:Equipment ] ?
       )
    } OR @this:ConductingEquipment
)

this:IdentifiedObject  (
    CLOSED {
       (  $this:IdentifiedObject_tes (  cim:IdentifiedObject.mRID @linkml:String ;
             cim:NameType.Names @this:Name *
          ) ;
          rdf:type [ cim:IdentifiedObject ] ?
       )
    } OR @this:ACDCTerminal OR @this:PowerSystemResource
)

this:LoadBreakSwitch CLOSED {
    (  $this:LoadBreakSwitch_tes (  &this:ProtectedSwitch_tes ;
          rdf:type [ cim:ProtectedSwitch ] ?
       ) ;
       rdf:type [ cim:LoadBreakSwitch ] ?
    )
}

this:Name CLOSED {
    (  $this:Name_tes (  cim:Name.NameType @this:NameType ;
          cim:Name.IdentifiedObject @this:IdentifiedObject
       ) ;
       rdf:type [ cim:Name ] ?
    )
}

this:NameType CLOSED {
    (  $this:NameType_tes (  cim:NameType.description @linkml:String ? ;
          cim:NameType.NameTypeAuthority @this:NameTypeAuthority ? ;
          cim:NameType.Names @this:Name *
       ) ;
       rdf:type [ cim:NameType ] ?
    )
}

this:NameTypeAuthority CLOSED {
    (  $this:NameTypeAuthority_tes (  cim:NameTypeAuthority.description @linkml:String ? ;
          cim:NameTypeAuthority.NameTypes @this:NameType *
       ) ;
       rdf:type [ cim:NameTypeAuthority ] ?
    )
}

this:PowerSystemResource  (
    CLOSED {
       (  $this:PowerSystemResource_tes (  &this:IdentifiedObject_tes ;
             rdf:type [ cim:IdentifiedObject ] ?
          ) ;
          rdf:type [ cim:PowerSystemResource ] ?
       )
    } OR @this:Equipment
)

this:ProtectedSwitch  (
    CLOSED {
       (  $this:ProtectedSwitch_tes (  &this:Switch_tes ;
             rdf:type [ cim:Switch ] ?
          ) ;
          rdf:type [ cim:ProtectedSwitch ] ?
       )
    } OR @this:Breaker OR @this:LoadBreakSwitch
)

this:ReactivePower CLOSED {
    (  $this:ReactivePower_tes (  cim:ReactivePower.value @linkml:Float ? ;
          cim:ReactivePower.unit [ cim:UnitSymbol.none cim:UnitSymbol.m cim:UnitSymbol.kg cim:UnitSymbol.s cim:UnitSymbol.A
             cim:UnitSymbol.K cim:UnitSymbol.mol cim:UnitSymbol.cd cim:UnitSymbol.deg cim:UnitSymbol.rad cim:UnitSymbol.sr
             cim:UnitSymbol.Gy cim:UnitSymbol.Bq cim:UnitSymbol.degC cim:UnitSymbol.Sv cim:UnitSymbol.F cim:UnitSymbol.C
             cim:UnitSymbol.S cim:UnitSymbol.H cim:UnitSymbol.V cim:UnitSymbol.ohm cim:UnitSymbol.J cim:UnitSymbol.N
             cim:UnitSymbol.Hz cim:UnitSymbol.lx cim:UnitSymbol.lm cim:UnitSymbol.Wb cim:UnitSymbol.T cim:UnitSymbol.W
             cim:UnitSymbol.Pa cim:UnitSymbol.m2 cim:UnitSymbol.m3 cim:UnitSymbol.mPers cim:UnitSymbol.mPers2 cim:UnitSymbol.m3Pers
             cim:UnitSymbol.mPerm3 cim:UnitSymbol.kgm cim:UnitSymbol.kgPerm3 cim:UnitSymbol.m2Pers cim:UnitSymbol.WPermK
             cim:UnitSymbol.JPerK cim:UnitSymbol.ppm cim:UnitSymbol.rotPers cim:UnitSymbol.radPers cim:UnitSymbol.WPerm2
             cim:UnitSymbol.JPerm2 cim:UnitSymbol.SPerm cim:UnitSymbol.KPers cim:UnitSymbol.PaPers cim:UnitSymbol.JPerkgK
             cim:UnitSymbol.VA cim:UnitSymbol.VAr cim:UnitSymbol.cosPhi cim:UnitSymbol.Vs cim:UnitSymbol.V2 cim:UnitSymbol.As
             cim:UnitSymbol.A2 cim:UnitSymbol.A2s cim:UnitSymbol.VAh cim:UnitSymbol.Wh cim:UnitSymbol.VArh cim:UnitSymbol.VPerHz
             cim:UnitSymbol.HzPers cim:UnitSymbol.character cim:UnitSymbol.charPers cim:UnitSymbol.kgm2 cim:UnitSymbol.dB
             cim:UnitSymbol.WPers cim:UnitSymbol.lPers cim:UnitSymbol.dBm cim:UnitSymbol.h cim:UnitSymbol.min cim:UnitSymbol.Q
             cim:UnitSymbol.Qh cim:UnitSymbol.ohmm cim:UnitSymbol.APerm cim:UnitSymbol.V2h cim:UnitSymbol.A2h cim:UnitSymbol.Ah
             cim:UnitSymbol.count cim:UnitSymbol.ft3 cim:UnitSymbol.m3Perh cim:UnitSymbol.gal cim:UnitSymbol.Btu cim:UnitSymbol.l
             cim:UnitSymbol.lPerh cim:UnitSymbol.lPerl cim:UnitSymbol.gPerg cim:UnitSymbol.molPerm3 cim:UnitSymbol.molPermol
             cim:UnitSymbol.molPerkg cim:UnitSymbol.sPers cim:UnitSymbol.HzPerHz cim:UnitSymbol.VPerV cim:UnitSymbol.APerA
             cim:UnitSymbol.VPerVA cim:UnitSymbol.rev cim:UnitSymbol.kat cim:UnitSymbol.JPerkg cim:UnitSymbol.m3Uncompensated
             cim:UnitSymbol.m3Compensated cim:UnitSymbol.WPerW cim:UnitSymbol.therm cim:UnitSymbol.onePerm cim:UnitSymbol.m3Perkg
             cim:UnitSymbol.Pas cim:UnitSymbol.Nm cim:UnitSymbol.NPerm cim:UnitSymbol.radPers2 cim:UnitSymbol.JPerm3
             cim:UnitSymbol.VPerm cim:UnitSymbol.CPerm3 cim:UnitSymbol.CPerm2 cim:UnitSymbol.FPerm cim:UnitSymbol.HPerm
             cim:UnitSymbol.JPermol cim:UnitSymbol.JPermolK cim:UnitSymbol.CPerkg cim:UnitSymbol.GyPers cim:UnitSymbol.WPersr
             cim:UnitSymbol.WPerm2sr cim:UnitSymbol.katPerm3 cim:UnitSymbol.d cim:UnitSymbol.anglemin cim:UnitSymbol.anglesec
             cim:UnitSymbol.ha cim:UnitSymbol.tonne cim:UnitSymbol.bar cim:UnitSymbol.mmHg cim:UnitSymbol.M cim:UnitSymbol.kn
             cim:UnitSymbol.Mx cim:UnitSymbol.G cim:UnitSymbol.Oe cim:UnitSymbol.Vh cim:UnitSymbol.WPerA cim:UnitSymbol.onePerHz
             cim:UnitSymbol.VPerVAr cim:UnitSymbol.ohmPerm cim:UnitSymbol.kgPerJ cim:UnitSymbol.JPers ] ? ;
          cim:ReactivePower.multiplier [ cim:UnitMultiplier.y cim:UnitMultiplier.z cim:UnitMultiplier.a cim:UnitMultiplier.f
             cim:UnitMultiplier.p cim:UnitMultiplier.n cim:UnitMultiplier.micro cim:UnitMultiplier.m cim:UnitMultiplier.c
             cim:UnitMultiplier.d cim:UnitMultiplier.none cim:UnitMultiplier.da cim:UnitMultiplier.h cim:UnitMultiplier.k
             cim:UnitMultiplier.M cim:UnitMultiplier.G cim:UnitMultiplier.T cim:UnitMultiplier.P cim:UnitMultiplier.E
             cim:UnitMultiplier.Z cim:UnitMultiplier.Y ] ?
       ) ;
       rdf:type [ cim:ReactivePower ] ?
    )
}

this:Switch  (
    CLOSED {
       (  $this:Switch_tes (  &this:ConductingEquipment_tes ;
             rdf:type [ cim:ConductingEquipment ] ? ;
             cim:Switch.open @linkml:Boolean ;
             cim:Switch.locked @linkml:Boolean
          ) ;
          rdf:type [ cim:Switch ] ?
       )
    } OR @this:Disconnector OR @this:ProtectedSwitch
)

this:Terminal CLOSED {
    (  $this:Terminal_tes (  &this:ACDCTerminal_tes ;
          rdf:type [ cim:ACDCTerminal ] ?
       ) ;
       rdf:type [ cim:Terminal ] ?
    )
}


